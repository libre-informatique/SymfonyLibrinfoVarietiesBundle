<?php

namespace Librinfo\VarietiesBundle\Entity\Test\Unit;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-05-30 at 16:49:58.
 */

use PHPUnit\Framework\TestCase;
use Librinfo\VarietiesBundle\Entity\Species;


class SpeciesTest extends TestCase
{
    /**
     * @var Species
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    /*
    * @todo: uncomment this line
    * $this->object = new Species;
    */
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::__clone
     * @todo   Implement test__clone().
     */
    public function test__clone()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::initCollections
     * @todo   Implement testInitCollections().
     */
    public function testInitCollections()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setLatinName
     * @todo   Implement testSetLatinName().
     */
    public function testSetLatinName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getLatinName
     * @todo   Implement testGetLatinName().
     */
    public function testGetLatinName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setAlias
     * @todo   Implement testSetAlias().
     */
    public function testSetAlias()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getAlias
     * @todo   Implement testGetAlias().
     */
    public function testGetAlias()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setCode
     * @todo   Implement testSetCode().
     */
    public function testSetCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getCode
     * @todo   Implement testGetCode().
     */
    public function testGetCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setLifeCycle
     * @todo   Implement testSetLifeCycle().
     */
    public function testSetLifeCycle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getLifeCycle
     * @todo   Implement testGetLifeCycle().
     */
    public function testGetLifeCycle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setLegalGerminationRate
     * @todo   Implement testSetLegalGerminationRate().
     */
    public function testSetLegalGerminationRate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getLegalGerminationRate
     * @todo   Implement testGetLegalGerminationRate().
     */
    public function testGetLegalGerminationRate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setSeedLifespan
     * @todo   Implement testSetSeedLifespan().
     */
    public function testSetSeedLifespan()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getSeedLifespan
     * @todo   Implement testGetSeedLifespan().
     */
    public function testGetSeedLifespan()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setRaiseDuration
     * @todo   Implement testSetRaiseDuration().
     */
    public function testSetRaiseDuration()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getRaiseDuration
     * @todo   Implement testGetRaiseDuration().
     */
    public function testGetRaiseDuration()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setTkw
     * @todo   Implement testSetTkw().
     */
    public function testSetTkw()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getTkw
     * @todo   Implement testGetTkw().
     */
    public function testGetTkw()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setRegulatoryStatus
     * @todo   Implement testSetRegulatoryStatus().
     */
    public function testSetRegulatoryStatus()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getRegulatoryStatus
     * @todo   Implement testGetRegulatoryStatus().
     */
    public function testGetRegulatoryStatus()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setGenus
     * @todo   Implement testSetGenus().
     */
    public function testSetGenus()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getGenus
     * @todo   Implement testGetGenus().
     */
    public function testGetGenus()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::addVariety
     * @todo   Implement testAddVariety().
     */
    public function testAddVariety()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::removeVariety
     * @todo   Implement testRemoveVariety().
     */
    public function testRemoveVariety()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getVarieties
     * @todo   Implement testGetVarieties().
     */
    public function testGetVarieties()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::addSubspecies
     * @todo   Implement testAddSubspecies().
     */
    public function testAddSubspecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::removeSubspeciese
     * @todo   Implement testRemoveSubspeciese().
     */
    public function testRemoveSubspeciese()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getSubspecieses
     * @todo   Implement testGetSubspecieses().
     */
    public function testGetSubspecieses()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::hasSubspecieses
     * @todo   Implement testHasSubspecieses().
     */
    public function testHasSubspecieses()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setParentSpecies
     * @todo   Implement testSetParentSpecies().
     */
    public function testSetParentSpecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getParentSpecies
     * @todo   Implement testGetParentSpecies().
     */
    public function testGetParentSpecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::hasParentSpecies
     * @todo   Implement testHasParentSpecies().
     */
    public function testHasParentSpecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::hasGrandParentSpecies
     * @todo   Implement testHasGrandParentSpecies().
     */
    public function testHasGrandParentSpecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::addPlantCategory
     * @todo   Implement testAddPlantCategory().
     */
    public function testAddPlantCategory()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::removePlantCategory
     * @todo   Implement testRemovePlantCategory().
     */
    public function testRemovePlantCategory()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getPlantCategories
     * @todo   Implement testGetPlantCategories().
     */
    public function testGetPlantCategories()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setPlantCategories
     * @todo   Implement testSetPlantCategories().
     */
    public function testSetPlantCategories()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getId
     * @todo   Implement testGetId().
     */
    public function testGetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setId
     * @todo   Implement testSetId().
     */
    public function testSetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::isNew
     * @todo   Implement testIsNew().
     */
    public function testIsNew()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::__toString
     * @todo   Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setName
     * @todo   Implement testSetName().
     */
    public function testSetName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getName
     * @todo   Implement testGetName().
     */
    public function testGetName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getCreatedAt
     * @todo   Implement testGetCreatedAt().
     */
    public function testGetCreatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setCreatedAt
     * @todo   Implement testSetCreatedAt().
     */
    public function testSetCreatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getUpdatedAt
     * @todo   Implement testGetUpdatedAt().
     */
    public function testGetUpdatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setUpdatedAt
     * @todo   Implement testSetUpdatedAt().
     */
    public function testSetUpdatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::setDescription
     * @todo   Implement testSetDescription().
     */
    public function testSetDescription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::getDescription
     * @todo   Implement testGetDescription().
     */
    public function testGetDescription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\Species::jsonSerialize
     * @todo   Implement testJsonSerialize().
     */
    public function testJsonSerialize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
