<?php

namespace Librinfo\VarietiesBundle\Entity\Test\Unit;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-05-30 at 16:49:44.
 */

use PHPUnit\Framework\TestCase;
use Librinfo\VarietiesBundle\Entity\PlantCategory;


class PlantCategoryTest extends TestCase
{
    /**
     * @var PlantCategory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    /*
    * @todo: uncomment this line
    * $this->object = new PlantCategory;
    */
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setCode
     * @todo   Implement testSetCode().
     */
    public function testSetCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getCode
     * @todo   Implement testGetCode().
     */
    public function testGetCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::addVariety
     * @todo   Implement testAddVariety().
     */
    public function testAddVariety()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::removeVariety
     * @todo   Implement testRemoveVariety().
     */
    public function testRemoveVariety()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getVarieties
     * @todo   Implement testGetVarieties().
     */
    public function testGetVarieties()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::addSpecies
     * @todo   Implement testAddSpecies().
     */
    public function testAddSpecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::removeSpecies
     * @todo   Implement testRemoveSpecies().
     */
    public function testRemoveSpecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getSpecies
     * @todo   Implement testGetSpecies().
     */
    public function testGetSpecies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setChildNodeOf
     * @todo   Implement testSetChildNodeOf().
     */
    public function testSetChildNodeOf()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getId
     * @todo   Implement testGetId().
     */
    public function testGetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setId
     * @todo   Implement testSetId().
     */
    public function testSetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::isNew
     * @todo   Implement testIsNew().
     */
    public function testIsNew()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::__toString
     * @todo   Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setName
     * @todo   Implement testSetName().
     */
    public function testSetName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getName
     * @todo   Implement testGetName().
     */
    public function testGetName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setTreeLft
     * @todo   Implement testSetTreeLft().
     */
    public function testSetTreeLft()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getTreeLft
     * @todo   Implement testGetTreeLft().
     */
    public function testGetTreeLft()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setTreeRgt
     * @todo   Implement testSetTreeRgt().
     */
    public function testSetTreeRgt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getTreeRgt
     * @todo   Implement testGetTreeRgt().
     */
    public function testGetTreeRgt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setTreeLvl
     * @todo   Implement testSetTreeLvl().
     */
    public function testSetTreeLvl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getTreeLvl
     * @todo   Implement testGetTreeLvl().
     */
    public function testGetTreeLvl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::addTreeChild
     * @todo   Implement testAddTreeChild().
     */
    public function testAddTreeChild()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::removeTreeChild
     * @todo   Implement testRemoveTreeChild().
     */
    public function testRemoveTreeChild()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getTreeChildren
     * @todo   Implement testGetTreeChildren().
     */
    public function testGetTreeChildren()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setTreeRoot
     * @todo   Implement testSetTreeRoot().
     */
    public function testSetTreeRoot()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getTreeRoot
     * @todo   Implement testGetTreeRoot().
     */
    public function testGetTreeRoot()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::setTreeParent
     * @todo   Implement testSetTreeParent().
     */
    public function testSetTreeParent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::getTreeParent
     * @todo   Implement testGetTreeParent().
     */
    public function testGetTreeParent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::initCollections
     * @todo   Implement testInitCollections().
     */
    public function testInitCollections()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\VarietiesBundle\Entity\PlantCategory::jsonSerialize
     * @todo   Implement testJsonSerialize().
     */
    public function testJsonSerialize()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
